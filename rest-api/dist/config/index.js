"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return _default;
    }
});
var _dotenv = /*#__PURE__*/ _interopRequireDefault(require("dotenv"));
var _path = /*#__PURE__*/ _interopRequireDefault(require("path"));
var _zod = /*#__PURE__*/ _interopRequireDefault(require("zod"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
_dotenv.default.config({
    path: _path.default.resolve(__dirname, "../../.env")
});
var envSchema = _zod.default.object({
    NODE_ENV: _zod.default.enum([
        "production",
        "development",
        "test"
    ]),
    PORT: _zod.default.string().default("5000"),
    DB_URL: _zod.default.string().startsWith("mongodb+srv://", {
        message: "Must provide a MongoDB URL"
    }),
    JWT_SECRET: _zod.default.string(),
    JWT_ACCESS_EXPIRATION_MINUTES: _zod.default.string().default("60"),
    JWT_REFRESH_EXPIRATION_DAYS: _zod.default.string().default("15"),
    JWT_RESET_PASSWORD_EXPIRATION_MINUTES: _zod.default.string().default("20")
});
var envVars = envSchema.safeParse(process.env);
if (!envVars.success) {
    throw new Error(envVars.error.issues.map(function(error) {
        return "".concat(error.path, " ").concat(error.message);
    }).join("\n"));
}
var _default = {
    env: envVars.data.NODE_ENV,
    port: envVars.data.PORT,
    mongoose: {
        url: envVars.data.DB_URL + (envVars.data.NODE_ENV === "test" ? "-test" : ""),
        options: {
            useNewUrlParser: true,
            useUnifiedTopology: true,
            ignoreUndefined: true
        }
    },
    jwt: {
        secret: envVars.data.JWT_SECRET,
        accessExpirationMinutes: envVars.data.JWT_ACCESS_EXPIRATION_MINUTES,
        refreshExpirationDays: envVars.data.JWT_REFRESH_EXPIRATION_DAYS,
        resetPasswordExpirationMinutes: envVars.data.JWT_RESET_PASSWORD_EXPIRATION_MINUTES,
        verifyEmailExpirationMinutes: envVars.data.JWT_VERIFY_EMAIL_EXPIRATION_MINUTES
    }
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9jb25maWcvaW5kZXgudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGRvdGVudiBmcm9tICdkb3RlbnYnO1xuaW1wb3J0IHBhdGggZnJvbSAncGF0aCc7XG5pbXBvcnQgeiBmcm9tICd6b2QnO1xuXG5kb3RlbnYuY29uZmlnKHsgcGF0aDogcGF0aC5yZXNvbHZlKF9fZGlybmFtZSwgJy4uLy4uLy5lbnYnKSB9KTtcblxuY29uc3QgZW52U2NoZW1hID0gei5vYmplY3Qoe1xuICBOT0RFX0VOVjogei5lbnVtKFsncHJvZHVjdGlvbicsICdkZXZlbG9wbWVudCcsICd0ZXN0J10pLFxuICBQT1JUOiB6LnN0cmluZygpLmRlZmF1bHQoJzUwMDAnKSxcbiAgREJfVVJMOiB6XG4gICAgLnN0cmluZygpXG4gICAgLnN0YXJ0c1dpdGgoJ21vbmdvZGIrc3J2Oi8vJywgeyBtZXNzYWdlOiAnTXVzdCBwcm92aWRlIGEgTW9uZ29EQiBVUkwnIH0pLFxuICBKV1RfU0VDUkVUOiB6LnN0cmluZygpLFxuICBKV1RfQUNDRVNTX0VYUElSQVRJT05fTUlOVVRFUzogei5zdHJpbmcoKS5kZWZhdWx0KCc2MCcpLFxuICBKV1RfUkVGUkVTSF9FWFBJUkFUSU9OX0RBWVM6IHouc3RyaW5nKCkuZGVmYXVsdCgnMTUnKSxcbiAgSldUX1JFU0VUX1BBU1NXT1JEX0VYUElSQVRJT05fTUlOVVRFUzogei5zdHJpbmcoKS5kZWZhdWx0KCcyMCcpLFxuICAvLyBKV1RfVkVSSUZZX0VNQUlMX0VYUElSQVRJT05fTUlOVVRFUzogei5udW1iZXIoKS5kZWZhdWx0KDIwKSxcbn0pO1xuXG5jb25zdCBlbnZWYXJzID0gZW52U2NoZW1hLnNhZmVQYXJzZShwcm9jZXNzLmVudik7XG5pZiAoIWVudlZhcnMuc3VjY2Vzcykge1xuICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgZW52VmFycy5lcnJvci5pc3N1ZXNcbiAgICAgIC5tYXAoKGVycm9yKSA9PiBgJHtlcnJvci5wYXRofSAke2Vycm9yLm1lc3NhZ2V9YClcbiAgICAgIC5qb2luKCdcXG4nKVxuICApO1xufVxuXG5leHBvcnQgZGVmYXVsdCB7XG4gIGVudjogZW52VmFycy5kYXRhLk5PREVfRU5WLFxuICBwb3J0OiBlbnZWYXJzLmRhdGEuUE9SVCxcbiAgbW9uZ29vc2U6IHtcbiAgICB1cmw6XG4gICAgICBlbnZWYXJzLmRhdGEuREJfVVJMICsgKGVudlZhcnMuZGF0YS5OT0RFX0VOViA9PT0gJ3Rlc3QnID8gJy10ZXN0JyA6ICcnKSxcbiAgICBvcHRpb25zOiB7XG4gICAgICB1c2VOZXdVcmxQYXJzZXI6IHRydWUsXG4gICAgICB1c2VVbmlmaWVkVG9wb2xvZ3k6IHRydWUsXG4gICAgICBpZ25vcmVVbmRlZmluZWQ6IHRydWUsXG4gICAgfSxcbiAgfSxcbiAgand0OiB7XG4gICAgc2VjcmV0OiBlbnZWYXJzLmRhdGEuSldUX1NFQ1JFVCxcbiAgICBhY2Nlc3NFeHBpcmF0aW9uTWludXRlczogZW52VmFycy5kYXRhLkpXVF9BQ0NFU1NfRVhQSVJBVElPTl9NSU5VVEVTLFxuICAgIHJlZnJlc2hFeHBpcmF0aW9uRGF5czogZW52VmFycy5kYXRhLkpXVF9SRUZSRVNIX0VYUElSQVRJT05fREFZUyxcbiAgICByZXNldFBhc3N3b3JkRXhwaXJhdGlvbk1pbnV0ZXM6XG4gICAgICBlbnZWYXJzLmRhdGEuSldUX1JFU0VUX1BBU1NXT1JEX0VYUElSQVRJT05fTUlOVVRFUyxcbiAgICB2ZXJpZnlFbWFpbEV4cGlyYXRpb25NaW51dGVzOlxuICAgICAgZW52VmFycy5kYXRhLkpXVF9WRVJJRllfRU1BSUxfRVhQSVJBVElPTl9NSU5VVEVTLFxuICB9LFxufTtcbiJdLCJuYW1lcyI6WyJkb3RlbnYiLCJjb25maWciLCJwYXRoIiwicmVzb2x2ZSIsIl9fZGlybmFtZSIsImVudlNjaGVtYSIsInoiLCJvYmplY3QiLCJOT0RFX0VOViIsImVudW0iLCJQT1JUIiwic3RyaW5nIiwiZGVmYXVsdCIsIkRCX1VSTCIsInN0YXJ0c1dpdGgiLCJtZXNzYWdlIiwiSldUX1NFQ1JFVCIsIkpXVF9BQ0NFU1NfRVhQSVJBVElPTl9NSU5VVEVTIiwiSldUX1JFRlJFU0hfRVhQSVJBVElPTl9EQVlTIiwiSldUX1JFU0VUX1BBU1NXT1JEX0VYUElSQVRJT05fTUlOVVRFUyIsImVudlZhcnMiLCJzYWZlUGFyc2UiLCJwcm9jZXNzIiwiZW52Iiwic3VjY2VzcyIsIkVycm9yIiwiZXJyb3IiLCJpc3N1ZXMiLCJtYXAiLCJqb2luIiwiZGF0YSIsInBvcnQiLCJtb25nb29zZSIsInVybCIsIm9wdGlvbnMiLCJ1c2VOZXdVcmxQYXJzZXIiLCJ1c2VVbmlmaWVkVG9wb2xvZ3kiLCJpZ25vcmVVbmRlZmluZWQiLCJqd3QiLCJzZWNyZXQiLCJhY2Nlc3NFeHBpcmF0aW9uTWludXRlcyIsInJlZnJlc2hFeHBpcmF0aW9uRGF5cyIsInJlc2V0UGFzc3dvcmRFeHBpcmF0aW9uTWludXRlcyIsInZlcmlmeUVtYWlsRXhwaXJhdGlvbk1pbnV0ZXMiLCJKV1RfVkVSSUZZX0VNQUlMX0VYUElSQVRJT05fTUlOVVRFUyJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7K0JBNEJBLFNBcUJFOzs7ZUFyQkYsUUFxQkU7OzsyREFqRGlCLFFBQVE7eURBQ1YsTUFBTTt3REFDVCxLQUFLOzs7Ozs7QUFFbkJBLE9BQU0sUUFBQSxDQUFDQyxNQUFNLENBQUM7SUFBRUMsSUFBSSxFQUFFQSxLQUFJLFFBQUEsQ0FBQ0MsT0FBTyxDQUFDQyxTQUFTLEVBQUUsWUFBWSxDQUFDO0NBQUUsQ0FBQyxDQUFDO0FBRS9ELElBQU1DLFNBQVMsR0FBR0MsSUFBQyxRQUFBLENBQUNDLE1BQU0sQ0FBQztJQUN6QkMsUUFBUSxFQUFFRixJQUFDLFFBQUEsQ0FBQ0csSUFBSSxDQUFDO1FBQUMsWUFBWTtRQUFFLGFBQWE7UUFBRSxNQUFNO0tBQUMsQ0FBQztJQUN2REMsSUFBSSxFQUFFSixJQUFDLFFBQUEsQ0FBQ0ssTUFBTSxFQUFFLENBQUNDLE9BQU8sQ0FBQyxNQUFNLENBQUM7SUFDaENDLE1BQU0sRUFBRVAsSUFBQyxRQUFBLENBQ05LLE1BQU0sRUFBRSxDQUNSRyxVQUFVLENBQUMsZ0JBQWdCLEVBQUU7UUFBRUMsT0FBTyxFQUFFLDRCQUE0QjtLQUFFLENBQUM7SUFDMUVDLFVBQVUsRUFBRVYsSUFBQyxRQUFBLENBQUNLLE1BQU0sRUFBRTtJQUN0Qk0sNkJBQTZCLEVBQUVYLElBQUMsUUFBQSxDQUFDSyxNQUFNLEVBQUUsQ0FBQ0MsT0FBTyxDQUFDLElBQUksQ0FBQztJQUN2RE0sMkJBQTJCLEVBQUVaLElBQUMsUUFBQSxDQUFDSyxNQUFNLEVBQUUsQ0FBQ0MsT0FBTyxDQUFDLElBQUksQ0FBQztJQUNyRE8scUNBQXFDLEVBQUViLElBQUMsUUFBQSxDQUFDSyxNQUFNLEVBQUUsQ0FBQ0MsT0FBTyxDQUFDLElBQUksQ0FBQztDQUVoRSxDQUFDLEFBQUM7QUFFSCxJQUFNUSxPQUFPLEdBQUdmLFNBQVMsQ0FBQ2dCLFNBQVMsQ0FBQ0MsT0FBTyxDQUFDQyxHQUFHLENBQUMsQUFBQztBQUNqRCxJQUFJLENBQUNILE9BQU8sQ0FBQ0ksT0FBTyxFQUFFO0lBQ3BCLE1BQU0sSUFBSUMsS0FBSyxDQUNiTCxPQUFPLENBQUNNLEtBQUssQ0FBQ0MsTUFBTSxDQUNqQkMsR0FBRyxDQUFDLFNBQUNGLEtBQUs7ZUFBSyxBQUFDLEVBQUEsQ0FBZ0JBLE1BQWEsQ0FBM0JBLEtBQUssQ0FBQ3hCLElBQUksRUFBQyxHQUFDLENBQWdCLENBQUEsTUFBQSxDQUFkd0IsS0FBSyxDQUFDWCxPQUFPLENBQUU7S0FBQSxDQUFDLENBQ2hEYyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQ2QsQ0FBQztBQUNKLENBQUM7SUFFRCxRQXFCRSxHQXJCYTtJQUNiTixHQUFHLEVBQUVILE9BQU8sQ0FBQ1UsSUFBSSxDQUFDdEIsUUFBUTtJQUMxQnVCLElBQUksRUFBRVgsT0FBTyxDQUFDVSxJQUFJLENBQUNwQixJQUFJO0lBQ3ZCc0IsUUFBUSxFQUFFO1FBQ1JDLEdBQUcsRUFDRGIsT0FBTyxDQUFDVSxJQUFJLENBQUNqQixNQUFNLEdBQUcsQ0FBQ08sT0FBTyxDQUFDVSxJQUFJLENBQUN0QixRQUFRLEtBQUssTUFBTSxHQUFHLE9BQU8sR0FBRyxFQUFFLENBQUM7UUFDekUwQixPQUFPLEVBQUU7WUFDUEMsZUFBZSxFQUFFLElBQUk7WUFDckJDLGtCQUFrQixFQUFFLElBQUk7WUFDeEJDLGVBQWUsRUFBRSxJQUFJO1NBQ3RCO0tBQ0Y7SUFDREMsR0FBRyxFQUFFO1FBQ0hDLE1BQU0sRUFBRW5CLE9BQU8sQ0FBQ1UsSUFBSSxDQUFDZCxVQUFVO1FBQy9Cd0IsdUJBQXVCLEVBQUVwQixPQUFPLENBQUNVLElBQUksQ0FBQ2IsNkJBQTZCO1FBQ25Fd0IscUJBQXFCLEVBQUVyQixPQUFPLENBQUNVLElBQUksQ0FBQ1osMkJBQTJCO1FBQy9Ed0IsOEJBQThCLEVBQzVCdEIsT0FBTyxDQUFDVSxJQUFJLENBQUNYLHFDQUFxQztRQUNwRHdCLDRCQUE0QixFQUMxQnZCLE9BQU8sQ0FBQ1UsSUFBSSxDQUFDYyxtQ0FBbUM7S0FDbkQ7Q0FDRiJ9